{"version":3,"sources":["Components/Login/Login.jsx","Components/Loader/Loader.jsx","Components/Chat/Message/Message.jsx","Components/Chat/Chat.jsx","Components/Navbar/Navbar.jsx","Components/Layout/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","React","memo","auth","useContext","Context","useAuthState","to","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","user","className","Button","onClick","variant","color","Loader","CircularProgress","size","Message","messageUID","userUID","photoURL","text","displayName","src","alt","Chat","firestore","useState","newMessage","setNewMessage","useCollectionData","collection","orderBy","messages","loading","chatMessagesArea","useRef","useEffect","current","scrollTo","behavior","top","scrollHeight","sendMessage","add","uid","createdAt","FieldValue","serverTimestamp","ref","map","message","index","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","onChange","e","target","value","onKeyPress","key","id","endAdornment","InputAdornment","position","endIcon","Icon","labelWidth","Navbar","props","Avatar","signOut","component","Link","Layout","children","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"0VA+BeA,EAvBDC,IAAMC,MAAK,WAErB,IAAOC,EAAQC,qBAAWC,GAAnBF,KACP,EAAeG,YAAaH,GAE5B,GAFA,oBAGI,OAAO,cAAC,IAAD,CAAUI,GAAI,UAGzB,IAAMC,EAAK,uCAAG,8BAAAC,EAAA,6DACJC,EAAW,IAAIC,IAASR,KAAKS,mBADzB,SAEWT,EAAKU,gBAAgBH,GAFhC,kBAEHI,KAFG,2CAAH,qDAKX,OACI,qBAAKC,UAAW,QAAhB,SACI,cAACC,EAAA,EAAD,CAAQC,QAAST,EAAOU,QAAQ,YAAYC,MAAM,UAAUJ,UAAU,gBAAtE,qC,4DCZGK,EARAnB,IAAMC,MAAK,WACtB,OACI,qBAAKa,UAAW,WAAhB,SACI,cAACM,EAAA,EAAD,CAAkBC,KAAM,WCSrBC,EAbC,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACnD,OACI,sBACKb,UAAS,gCAA2BS,IAAeC,EAAU,wBAA0B,IAD5F,UAEI,qBAAKI,IAAKH,EAAUI,IAAI,GAAGf,UAAU,wBACrC,sBAAKA,UAAU,gBAAf,UACI,mBAAGA,UAAU,oBAAb,SAAkCa,IAClC,mBAAGb,UAAU,gBAAb,SAA8BY,WCuF/BI,EAvFF9B,IAAMC,MAAK,WAEpB,MAA0BE,qBAAWC,GAA9BF,EAAP,EAAOA,KAAM6B,EAAb,EAAaA,UACb,EAAe1B,YAAaH,GAArBW,EAAP,oBACA,EAAoCmB,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BC,YACxBJ,EAAUK,WAAW,YAAYC,QAAQ,cAD7C,mBAAOC,EAAP,KAAiBC,EAAjB,KAGMC,EAAmBC,iBAAO,MAEhCC,qBAAU,WAAO,IAAD,EACZ,UAAAF,EAAiBG,eAAjB,SAA0BC,SAAS,CAC/BC,SAAU,SACVC,IAAKN,EAAiBG,QAAQI,iBAEnC,CAACT,IAEJ,IAAMU,EAAc,WAChBjB,EAAUK,WAAW,YAAYa,IAAI,CACjCC,IAAKrC,EAAKqC,IACVvB,YAAad,EAAKc,YAClBF,SAAUZ,EAAKY,SACfC,KAAMO,EACNkB,UAAWzC,IAASqB,UAAUqB,WAAWC,oBAE7CnB,EAAc,KAGlB,OAAKrB,EAID0B,EACO,cAAC,EAAD,IAIP,0BAASzB,UAAU,OAAnB,UACI,sBAAKwC,IAAKd,EAAkB1B,UAAU,iBAAtC,UACKwB,EAASiB,KAAI,SAACC,EAASC,GACpB,OACI,cAAC,EAAD,CAEI9B,YAAa6B,EAAQ7B,YACrBH,QAASX,EAAKqC,IACd3B,WAAYiC,EAAQN,IACpBxB,KAAM8B,EAAQ9B,KACdD,SAAU+B,EAAQ/B,UALbgC,MASjB,sBAAM3C,UAAU,gBAEpB,qBAAKA,UAAU,iBAAf,SACI,eAAC4C,EAAA,EAAD,CAAazC,QAAQ,WAAW0C,WAAS,EAAzC,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,6BAApB,qBACA,cAACC,EAAA,EAAD,CACIC,SAAU,SAACC,GAAD,OAAO9B,EAAc8B,EAAEC,OAAOC,QACxCC,WAAY,SAACH,GACK,UAAVA,EAAEI,KACFpB,KAGRkB,MAAOjC,EACP0B,WAAS,EACTU,GAAG,6BACHC,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACzD,EAAA,EAAD,CACIC,QAASgC,EACT/B,QAAQ,YACRC,MAAM,UACNuD,QAAS,cAACC,EAAA,EAAD,mBAJb,oBAURC,WAAY,aAjDrB,cAAC,IAAD,CAAUrE,GAAI,c,SCDdsE,EA/BA5E,IAAMC,MAAK,SAAC4E,GAEvB,IAAO3E,EAAQC,qBAAWC,GAAnBF,KACP,EAAeG,YAAaH,GAArBW,EAAP,oBAEA,OACI,mCACI,iCACI,qBAAKC,UAAU,SAAf,SACKD,EAEG,qCACI,cAACiE,EAAA,EAAD,CAAQhE,UAAW,cAAec,IAAKf,EAAKY,WAC5C,cAACV,EAAA,EAAD,CAAQC,QAAS,kBAAMd,EAAK6E,WAAWjE,UAAW,eAAgBG,QAAQ,YAClEC,MAAM,YADd,+CAMJ,cAACH,EAAA,EAAD,CAAQD,UAAW,eAAgBG,QAAQ,YAAYC,MAAM,YAAY8D,UAAWC,IAC5E3E,GAAI,SADZ,qDCHT4E,EAjBAlF,IAAMC,MAAK,SAAC4E,GAEvB,IAAO3E,EAAQC,qBAAWC,GAAnBF,KACP,EAA+BG,YAAaH,GAA5C,mBAAaqC,GAAb,gBAEA,OAAIA,EACO,cAAC,EAAD,IAIP,mCACKsC,EAAMM,cCQJC,MAlBf,WACI,OACI,qBAAKtE,UAAU,MAAf,SACI,cAAC,IAAD,UACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,+BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAM,SAAUN,UAAWjF,IACxC,cAAC,IAAD,CAAOsF,OAAK,EAACC,KAAM,QAASN,UAAWlD,iBCJpDyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCGd9E,IAASsF,cAAc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGZ,IAAMnG,EAAUoG,wBAAc,MAE/BtG,EAAOQ,IAASR,OAChB6B,EAAYrB,IAASqB,YAE3B0E,IAASC,OACL,cAACtG,EAAQuG,SAAT,CAAkBzC,MAAO,CACrBxD,aACAR,OACA6B,aAHJ,SAKI,cAAC,EAAD,MAEJ6E,SAASC,eAAe,SAM5BtB,M","file":"static/js/main.0469fedc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button} from \"@material-ui/core\"\r\nimport {useContext} from \"react\";\r\nimport {Context} from \"../../index\";\r\nimport firebase from \"firebase\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = React.memo(() => {\r\n\r\n    const {auth} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n\r\n    if (user) {\r\n        return <Redirect to={'/chat'}/>\r\n    }\r\n\r\n    const login = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        const {user} = await auth.signInWithPopup(provider)\r\n    }\r\n\r\n    return (\r\n        <div className={'login'}>\r\n            <Button onClick={login} variant=\"contained\" color=\"primary\" className=\"login__button\">Log-in with\r\n                google</Button>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default Login","import {CircularProgress} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Loader = React.memo(() => {\r\n    return(\r\n        <div className={\"progress\"}>\r\n            <CircularProgress size={100}/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Loader","import React from \"react\";\r\n\r\n\r\nconst Message = ({messageUID, userUID, photoURL, text, displayName}) => {\r\n    return(\r\n        <div\r\n             className={`message chat__message ${messageUID === userUID ? 'chat__message_from-me' : ''}`}>\r\n            <img src={photoURL} alt=\"\" className=\"message__user-photo\"/>\r\n            <div className=\"message__body\">\r\n                <p className=\"message__username\">{displayName}</p>\r\n                <p className=\"message__text\">{text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import {Button, FormControl, Icon, InputAdornment, InputLabel, OutlinedInput} from \"@material-ui/core\";\r\nimport React, {useContext, useEffect, useRef, useState} from \"react\";\r\nimport {Context} from \"../../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport firebase from \"firebase\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Chat = React.memo(() => {\r\n\r\n    const {auth, firestore} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n    const [newMessage, setNewMessage] = useState('')\r\n    const [messages, loading] = useCollectionData(\r\n        firestore.collection('messages').orderBy('createdAt')\r\n    )\r\n    const chatMessagesArea = useRef(null)\r\n\r\n    useEffect(() => {\r\n        chatMessagesArea.current?.scrollTo({\r\n            behavior: 'smooth',\r\n            top: chatMessagesArea.current.scrollHeight\r\n        })\r\n    }, [messages])\r\n\r\n    const sendMessage = () => {\r\n        firestore.collection('messages').add({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n            text: newMessage,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setNewMessage('')\r\n    }\r\n\r\n    if (!user) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <section className=\"chat\">\r\n            <div ref={chatMessagesArea} className=\"chat__messages\">\r\n                {messages.map((message, index) => {\r\n                    return (\r\n                        <Message\r\n                            key={index}\r\n                            displayName={message.displayName}\r\n                            userUID={user.uid}\r\n                            messageUID={message.uid}\r\n                            text={message.text}\r\n                            photoURL={message.photoURL}\r\n                        />\r\n                    )\r\n                })}\r\n                <span className=\"scrollTo\"/>\r\n            </div>\r\n            <div className=\"chat__controls\">\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                    <InputLabel htmlFor=\"outlined-adornment-message\">Message</InputLabel>\r\n                    <OutlinedInput\r\n                        onChange={(e) => setNewMessage(e.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                sendMessage()\r\n                            }\r\n                        }}\r\n                        value={newMessage}\r\n                        fullWidth\r\n                        id=\"outlined-adornment-message\"\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <Button\r\n                                    onClick={sendMessage}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    endIcon={<Icon>send</Icon>}\r\n                                >\r\n                                    Send\r\n                                </Button>\r\n                            </InputAdornment>\r\n                        }\r\n                        labelWidth={70}\r\n                    />\r\n                </FormControl>\r\n            </div>\r\n        </section>\r\n    )\r\n})\r\n\r\n\r\nexport default Chat","import {Link} from \"react-router-dom\";\r\nimport {Avatar, Button} from \"@material-ui/core\";\r\nimport React, {useContext} from \"react\";\r\nimport {Context} from \"../../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\n\r\nconst Navbar = React.memo((props) => {\r\n\r\n    const {auth} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <nav className=\"navbar\">\r\n                    {user\r\n                        ?\r\n                        <>\r\n                            <Avatar className={'user-avatar'} src={user.photoURL}/>\r\n                            <Button onClick={() => auth.signOut()} className={\"navbar__link\"} variant=\"contained\"\r\n                                    color=\"secondary\">\r\n                                Выйти\r\n                            </Button>\r\n                        </>\r\n                        :\r\n                        <Button className={\"navbar__link\"} variant=\"contained\" color=\"secondary\" component={Link}\r\n                                to={'/login'}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </nav>\r\n            </header>\r\n        </>\r\n    )\r\n})\r\n\r\n\r\nexport default Navbar","import {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport React, {useContext} from \"react\";\r\nimport {Context} from \"../../index\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\n\r\nconst Layout = React.memo((props) => {\r\n\r\n    const {auth} = useContext(Context)\r\n    const [user, loading, error] = useAuthState(auth)\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    )\r\n})\r\n\r\n\r\nexport default Layout","import './App.css';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport Login from \"./Components/Login/Login\";\nimport Chat from \"./Components/Chat/Chat\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Layout from \"./Components/Layout/Layout\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Layout>\n                    <Navbar/>\n                    <main>\n                        <Switch>\n                            <Route exact path={'/login'} component={Login}/>\n                            <Route exact path={'/chat'} component={Chat}/>\n                        </Switch>\n                    </main>\n                </Layout>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize Firebase\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCDoeY_OPEmje0hYhb_9yNbTbNFB882Yhc\",\n    authDomain: \"chat-app-7804e.firebaseapp.com\",\n    projectId: \"chat-app-7804e\",\n    storageBucket: \"chat-app-7804e.appspot.com\",\n    messagingSenderId: \"312475671256\",\n    appId: \"1:312475671256:web:216fd867818b69ef8fd5ad\",\n    measurementId: \"G-0121KC8CJC\"\n});\n\nexport const Context = createContext(null)\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nReactDOM.render(\n    <Context.Provider value={{\n        firebase,\n        auth,\n        firestore\n    }}>\n        <App/>\n    </Context.Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}